// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyStuff;

#nullable disable

namespace MyStuff.Migrations
{
    [DbContext(typeof(StuffContext))]
    partial class StuffContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("MyStuff.Models.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlacementNotes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StorageId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StorageId");

                    b.ToTable("Items");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Main pillow",
                            Image = "",
                            Name = "Pillow",
                            PlacementNotes = "At the head of the bed",
                            StorageId = 1
                        },
                        new
                        {
                            Id = 2,
                            Description = "Forks",
                            Image = "",
                            Name = "Forks",
                            PlacementNotes = "In the silverware drawer",
                            StorageId = 2
                        });
                });

            modelBuilder.Entity("MyStuff.Models.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Locations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Image = "",
                            Name = "Bedroom"
                        },
                        new
                        {
                            Id = 2,
                            Image = "",
                            Name = "Kitchen"
                        },
                        new
                        {
                            Id = 3,
                            Image = "",
                            Name = "Bathroom"
                        });
                });

            modelBuilder.Entity("MyStuff.Models.Storage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LocationId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlacementNotes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.ToTable("Storages");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Image = "",
                            LocationId = 1,
                            Name = "Bed",
                            PlacementNotes = "For items placed on the bed"
                        },
                        new
                        {
                            Id = 2,
                            Image = "",
                            LocationId = 2,
                            Name = "Silverware Drawer",
                            PlacementNotes = ""
                        },
                        new
                        {
                            Id = 3,
                            Image = "",
                            LocationId = 3,
                            Name = "Cabinet",
                            PlacementNotes = ""
                        });
                });

            modelBuilder.Entity("MyStuff.Models.Item", b =>
                {
                    b.HasOne("MyStuff.Models.Storage", "Storage")
                        .WithMany("Items")
                        .HasForeignKey("StorageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Storage");
                });

            modelBuilder.Entity("MyStuff.Models.Storage", b =>
                {
                    b.HasOne("MyStuff.Models.Location", "Location")
                        .WithMany("Storages")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Location");
                });

            modelBuilder.Entity("MyStuff.Models.Location", b =>
                {
                    b.Navigation("Storages");
                });

            modelBuilder.Entity("MyStuff.Models.Storage", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
